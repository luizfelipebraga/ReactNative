{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Desktop\\\\Senai\\\\ReactNative\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\screens\\\\MeuPefil.tsx\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport api from \"../services/api\";\nimport jwt from \"../services/tokenDecoder\";\nimport AuthContext from \"../context/auth\";\n\nvar MeuPerfil = function MeuPerfil() {\n  var _useContext = useContext(AuthContext),\n      GetTokenUser = _useContext.GetTokenUser,\n      Logout = _useContext.Logout;\n\n  var tokenDecoded;\n  GetTokenUser().then(function (token) {\n    tokenDecoded = token !== null ? jwt(token) : null;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      curso = _useState6[0],\n      setCurso = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sexo = _useState8[0],\n      setSexo = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      termo = _useState10[0],\n      setTermo = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rma = _useState12[0],\n      setRma = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataNascimento = _useState14[0],\n      setDataNascimento = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataMatricula = _useState16[0],\n      setDataMatricula = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sobre = _useState18[0],\n      setSobre = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      sobreOld = _useState20[0],\n      setSobreOld = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      linkExterno = _useState22[0],\n      setLinkExterno = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      linkExternoOld = _useState24[0],\n      setLinkExternoOld = _useState24[1];\n\n  useEffect(function () {\n    Listar();\n  }, []);\n\n  var Listar = function Listar() {\n    var initListar;\n    return _regeneratorRuntime.async(function Listar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(tokenDecoded == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Não foi possível carregar as informações do candidato'));\n\n          case 2:\n            initListar = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(api.get(\"UsuariosCandidatos/perfil/usuario/\" + tokenDecoded.jti, initListar).then(function (resp) {\n              setNome(resp.data.nomeCompleto);\n              setEmail(resp.data.email);\n              setCurso(resp.data.tipoCurso.descricao);\n              setRma(resp.data.rma);\n              setSexo(resp.data.sexo);\n              setTermo(resp.data.termoOuEgressoAluno.descricao);\n              setSobre(resp.data.perfilCandidato.sobreOCandidato);\n              setSobreOld(resp.data.perfilCandidato.sobreOCandidato);\n              setLinkExterno(resp.data.perfilCandidato.linkExterno);\n              setLinkExternoOld(resp.data.perfilCandidato.linkExterno);\n              setDataNascimento(new Date(resp.data.dataNascimento).toLocaleDateString('pt-BR', {\n                timeZone: 'UTC'\n              }));\n              setDataMatricula(new Date(resp.data.dataMatricula).toLocaleDateString('pt-BR', {\n                timeZone: 'UTC'\n              }));\n            }).catch(function (error) {\n              if (error.response) {\n                return Alert.alert(error.response.data);\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var salvarPerfil = function salvarPerfil() {\n    var form, init;\n    return _regeneratorRuntime.async(function salvarPerfil$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(tokenDecoded == null)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", Alert.alert('Não foi possível salvar o perfil do usuário'));\n\n          case 2:\n            form = {\n              linkExterno: linkExterno,\n              sobreOCandidato: sobre\n            };\n\n            if (!(form.linkExterno === linkExternoOld && form.sobreOCandidato === sobreOld)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", Alert.alert('Não há nenhuma alteração para salvar :)'));\n\n          case 5:\n            init = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(api.put(\"UsuariosCandidatos/alterar/descricao/link/\" + tokenDecoded.jti, form, init).then(function (resp) {\n              if (resp.status === 200) {\n                Alert.alert(resp.data);\n                setLinkExterno(linkExterno);\n                setLinkExternoOld(linkExterno);\n                setSobre(sobre);\n                setSobreOld(sobre);\n              }\n            }).catch(function (error) {\n              if (error.response) {\n                return Alert.alert(error.response.data);\n              }\n            }));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.boxMeuPerfil,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.imagePerfil,\n    source: require(\"../assets/images/IconUsuario.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Meu perfil\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  boxMeuPerfil: {},\n  imagePerfil: {}\n});\nexport default MeuPerfil;","map":{"version":3,"sources":["C:/Users/Felipe/Desktop/Senai/ReactNative/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/screens/MeuPefil.tsx"],"names":["React","useState","useEffect","useContext","api","jwt","AuthContext","MeuPerfil","GetTokenUser","Logout","tokenDecoded","then","token","nome","setNome","email","setEmail","curso","setCurso","sexo","setSexo","termo","setTermo","rma","setRma","dataNascimento","setDataNascimento","dataMatricula","setDataMatricula","sobre","setSobre","sobreOld","setSobreOld","linkExterno","setLinkExterno","linkExternoOld","setLinkExternoOld","Listar","Alert","alert","initListar","headers","get","jti","resp","data","nomeCompleto","tipoCurso","descricao","termoOuEgressoAluno","perfilCandidato","sobreOCandidato","Date","toLocaleDateString","timeZone","catch","error","response","salvarPerfil","form","init","put","status","styles","container","boxMeuPerfil","imagePerfil","require","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport * as Font from 'expo-font';\r\nimport { AppLoading } from 'expo';\r\nimport { View, StyleSheet, Image, TouchableOpacity, TextInput, Text, Alert } from 'react-native';\r\n//Api\r\nimport api from '../services/api';\r\n// Interfaces\r\n// Token Decoder\r\nimport jwt from '../services/tokenDecoder';\r\n// Interfaces\r\nimport token from '../interfaces/token';\r\n//Page\r\nimport CardCandidato from '../../src/components/cardCandidato'\r\nimport AuthContext from '../context/auth';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst MeuPerfil = () => {\r\n\r\n    const { GetTokenUser, Logout } = useContext(AuthContext)\r\n\r\n    let tokenDecoded: token;\r\n\r\n    GetTokenUser().then(token => {\r\n        tokenDecoded = token !== null ? jwt(token) : null;\r\n    })\r\n\r\n    // Dados estáticos\r\n    const [nome, setNome] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [curso, setCurso] = useState('');\r\n    const [sexo, setSexo] = useState(true);\r\n    const [termo, setTermo] = useState('');\r\n    const [rma, setRma] = useState('');\r\n    const [dataNascimento, setDataNascimento] = useState('');\r\n    const [dataMatricula, setDataMatricula] = useState('');\r\n\r\n    // Dados alteráveis\r\n    const [sobre, setSobre] = useState('');\r\n    const [sobreOld, setSobreOld] = useState('');\r\n    const [linkExterno, setLinkExterno] = useState('');\r\n    const [linkExternoOld, setLinkExternoOld] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        Listar();\r\n    }, [])\r\n\r\n    // Requisições GET\r\n    const Listar = async () => {\r\n        if (tokenDecoded == null) {\r\n            return Alert.alert('Não foi possível carregar as informações do candidato')\r\n\r\n        }\r\n\r\n        const initListar = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        await api\r\n            .get(`UsuariosCandidatos/perfil/usuario/${tokenDecoded.jti}`, initListar)\r\n            .then(resp => {\r\n                setNome(resp.data.nomeCompleto);\r\n                setEmail(resp.data.email);\r\n                setCurso(resp.data.tipoCurso.descricao);\r\n                setRma(resp.data.rma);\r\n                setSexo(resp.data.sexo);\r\n                setTermo(resp.data.termoOuEgressoAluno.descricao)\r\n                setSobre(resp.data.perfilCandidato.sobreOCandidato)\r\n                setSobreOld(resp.data.perfilCandidato.sobreOCandidato)\r\n                setLinkExterno(resp.data.perfilCandidato.linkExterno)\r\n                setLinkExternoOld(resp.data.perfilCandidato.linkExterno)\r\n\r\n                // Converte data para horário local (sem horas)\r\n                setDataNascimento(new Date(resp.data.dataNascimento).toLocaleDateString('pt-BR', { timeZone: 'UTC' }));\r\n                setDataMatricula(new Date(resp.data.dataMatricula).toLocaleDateString('pt-BR', { timeZone: 'UTC' }));\r\n                //console.log(resp.data)\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    return Alert.alert(error.response.data)\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    const salvarPerfil = async () => {\r\n        if (tokenDecoded == null) {\r\n            return Alert.alert('Não foi possível salvar o perfil do usuário')\r\n\r\n        }\r\n\r\n        const form = {\r\n            linkExterno: linkExterno,\r\n            sobreOCandidato: sobre\r\n        }\r\n\r\n        if (form.linkExterno === linkExternoOld && form.sobreOCandidato === sobreOld) {\r\n            return Alert.alert('Não há nenhuma alteração para salvar :)')\r\n\r\n        }\r\n\r\n        const init = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        await api\r\n            .put(`UsuariosCandidatos/alterar/descricao/link/${tokenDecoded.jti}`, form, init)\r\n            .then(resp => {\r\n                if (resp.status === 200) {\r\n                    Alert.alert(resp.data);\r\n                    setLinkExterno(linkExterno)\r\n                    setLinkExternoOld(linkExterno)\r\n                    setSobre(sobre)\r\n                    setSobreOld(sobre)\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    return Alert.alert(error.response.data);\r\n\r\n                }\r\n                // error.response adquire a resposta de erro da API\r\n                // error.response.status (status do retorno)\r\n                // error.response.data (dados retornados da API)\r\n            })\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.boxMeuPerfil}>\r\n                <Image style={styles.imagePerfil} source={require('../assets/images/IconUsuario.png')}/>\r\n                <Text>Meu perfil</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    boxMeuPerfil: {\r\n\r\n    },\r\n\r\n    imagePerfil: {\r\n\r\n    }\r\n})\r\n\r\nexport default MeuPerfil;"]},"metadata":{},"sourceType":"module"}