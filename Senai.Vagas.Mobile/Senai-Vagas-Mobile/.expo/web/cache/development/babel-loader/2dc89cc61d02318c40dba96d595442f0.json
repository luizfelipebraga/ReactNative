{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Desktop\\\\Senai\\\\ReactNative\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\components\\\\cardCandidatoHome.tsx\";\n\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport jwt from \"../services/tokenDecoder\";\nimport api from \"../services/api\";\nimport AuthContext from \"../context/auth\";\n\nvar cardCandidatoHome = function cardCandidatoHome(_ref) {\n  var nomeVaga = _ref.nomeVaga,\n      descricao = _ref.descricao,\n      vagaAtiva = _ref.vagaAtiva,\n      vagaId = _ref.vagaId;\n\n  var _useContext = useContext(AuthContext),\n      GetTokenUser = _useContext.GetTokenUser;\n\n  var tokenDecoded;\n  GetTokenUser().then(function (token) {\n    tokenDecoded = token !== null ? jwt(token) : null;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeEmpresa = _useState2[0],\n      setNomeEmpresa = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tipoExperiencia = _useState4[0],\n      setExperiencia = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cargo = _useState6[0],\n      setCargo = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      faixaSalarial = _useState8[0],\n      setFaixaSalarial = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nomeMunicipio = _useState10[0],\n      setNomeMunicipio = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ufSigla = _useState12[0],\n      setUfSigla = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataEncerramento = _useState14[0],\n      setDataEncerramento = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      areaVagaRecomendadas = _useState16[0],\n      setAreaVagaRecomendadas = _useState16[1];\n\n  var VerMais = function VerMais(vagaId) {\n    var initListar;\n    return _regeneratorRuntime.async(function VerMais$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(tokenDecoded == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Não foi possível carregar as informações do candidato'));\n\n          case 2:\n            initListar = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(api.get(\"Vagas/buscar/vaga/\" + vagaId, initListar).then(function (resp) {\n              setNomeEmpresa(resp.data.nomeEmpresa);\n              setExperiencia(resp.data.tipoExperiencia.descricao);\n              setCargo(resp.data.cargo);\n              setFaixaSalarial(resp.data.faixaSalarial.descricao);\n              setNomeMunicipio(resp.data.municipio.descricao);\n              setUfSigla(resp.data.municipio.ufSigla);\n              setDataEncerramento(new Date(resp.data.dataEncerramento).toLocaleDateString('pt-BR', {\n                timeZone: 'UTC'\n              }));\n              setAreaVagaRecomendadas(resp.data.areaVagaRecomendadas);\n            }).catch(function (error) {\n              if (error.response) {\n                return alert(error.response.data);\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.titulo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.nomeVaga,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, nomeVaga), React.createElement(View, {\n    style: styles.sectionVaga,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, vagaAtiva ? React.createElement(Text, {\n    style: styles.vagaAtiva,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, \"Vaga Ativa\") : React.createElement(Text, {\n    style: styles.vagaEncerrada,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 88\n    }\n  }, \"Vaga Encerrada\"))), React.createElement(View, {\n    style: styles.textos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.descricao,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, descricao.length > 300 ? descricao.substring(0, 300) + \" [...]\" : descricao)));\n};\n\nvar styles = StyleSheet.create({\n  botoes: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    marginHorizontal: 3,\n    marginBottom: 2\n  },\n  btnAzul: {\n    backgroundColor: '#ffffff',\n    color: '#016799',\n    borderColor: '#016799'\n  },\n  btnVermelho: {},\n  textVermais: {},\n  card: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: 10,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowColor: 'black',\n    shadowOpacity: 0.3\n  },\n  titulo: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginHorizontal: 10,\n    marginTop: 10\n  },\n  nomeVaga: {\n    color: '#303030',\n    marginRight: 10,\n    fontFamily: 'sansation-regular',\n    fontSize: 22\n  },\n  sectionVaga: {},\n  vagaAtiva: {\n    color: '#016799',\n    marginLeft: 0\n  },\n  vagaEncerrada: {\n    color: '#df0003',\n    marginLeft: 0\n  },\n  textos: {\n    marginVertical: 12,\n    marginHorizontal: 15,\n    color: '#606060'\n  },\n  descricao: {\n    fontSize: 13\n  }\n});\nexport default cardCandidatoHome;","map":{"version":3,"sources":["C:/Users/Felipe/Desktop/Senai/ReactNative/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/components/cardCandidatoHome.tsx"],"names":["React","useContext","useState","jwt","api","AuthContext","cardCandidatoHome","nomeVaga","descricao","vagaAtiva","vagaId","GetTokenUser","tokenDecoded","then","token","nomeEmpresa","setNomeEmpresa","tipoExperiencia","setExperiencia","cargo","setCargo","faixaSalarial","setFaixaSalarial","nomeMunicipio","setNomeMunicipio","ufSigla","setUfSigla","dataEncerramento","setDataEncerramento","areaVagaRecomendadas","setAreaVagaRecomendadas","VerMais","Alert","alert","initListar","headers","get","resp","data","municipio","Date","toLocaleDateString","timeZone","catch","error","response","styles","card","titulo","sectionVaga","vagaEncerrada","textos","length","substring","StyleSheet","create","botoes","display","alignItems","justifyContent","marginHorizontal","marginBottom","btnAzul","backgroundColor","color","borderColor","btnVermelho","textVermais","margin","shadowOffset","width","height","shadowColor","shadowOpacity","flexDirection","marginTop","marginRight","fontFamily","fontSize","marginLeft","marginVertical"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { View, Text, StyleSheet, Button, TouchableOpacity, Alert } from 'react-native';\r\n\r\nimport jwt from '../services/tokenDecoder';\r\nimport api from '../services/api';\r\nimport AuthContext from '../context/auth';\r\n// Interfaces\r\nimport token from '../interfaces/token';\r\ninterface CardProps {\r\n    nomeVaga: string;\r\n    descricao: string;\r\n    vagaAtiva: Boolean;\r\n    vagaId: number;\r\n}\r\n\r\n\r\nconst cardCandidatoHome: React.FC<CardProps> = ({ nomeVaga, descricao, vagaAtiva, vagaId }) => {\r\n    const { GetTokenUser } = useContext(AuthContext)\r\n\r\n    let tokenDecoded: token;\r\n\r\n    GetTokenUser().then(token => {\r\n        tokenDecoded = token !== null ? jwt(token) : null;\r\n    })\r\n\r\n    // Dados estáticos\r\n    const [nomeEmpresa, setNomeEmpresa] = useState('');\r\n    const [tipoExperiencia, setExperiencia] = useState('');\r\n    const [cargo, setCargo] = useState('');\r\n    const [faixaSalarial, setFaixaSalarial] = useState('');\r\n\r\n    const [nomeMunicipio, setNomeMunicipio] = useState('');\r\n    const [ufSigla, setUfSigla] = useState<any>({});\r\n\r\n    const [dataEncerramento, setDataEncerramento] = useState('');\r\n    const [areaVagaRecomendadas, setAreaVagaRecomendadas] = useState([]);\r\n\r\n\r\n    const VerMais = async (vagaId: number) => {\r\n        if (tokenDecoded == null) {\r\n            return Alert.alert('Não foi possível carregar as informações do candidato')\r\n        }\r\n\r\n        const initListar = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        await api\r\n            .get(`Vagas/buscar/vaga/${vagaId}`, initListar)\r\n            .then(resp => {\r\n                setNomeEmpresa(resp.data.nomeEmpresa);\r\n                setExperiencia(resp.data.tipoExperiencia.descricao);\r\n                setCargo(resp.data.cargo);\r\n                setFaixaSalarial(resp.data.faixaSalarial.descricao);\r\n                setNomeMunicipio(resp.data.municipio.descricao);\r\n                setUfSigla(resp.data.municipio.ufSigla);\r\n                setDataEncerramento(new Date(resp.data.dataEncerramento).toLocaleDateString('pt-BR', { timeZone: 'UTC' }));\r\n                setAreaVagaRecomendadas(resp.data.areaVagaRecomendadas);\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    return alert(error.response.data)\r\n                }\r\n            })\r\n    }\r\n\r\n    // const Botoes = (vagaId: number) => {\r\n    //     if (vagaAtiva) {\r\n    //         return (\r\n    //             <View>\r\n    //                 <View style={styles.botoes}>\r\n    //                     <TouchableOpacity style={styles.btnAzul} onPress={event => {\r\n    //                         event.preventDefault();\r\n    //                         VerMais(vagaId);\r\n    //                     }}><Text>Ver Mais</Text></TouchableOpacity>\r\n    //                 </View>\r\n    //             </View>\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <View style={styles.card}>\r\n            <View style={styles.titulo}>\r\n                <Text style={styles.nomeVaga}>{nomeVaga}</Text>\r\n\r\n                <View style={styles.sectionVaga}>\r\n                    {\r\n                        vagaAtiva ? <Text style={styles.vagaAtiva}>Vaga Ativa</Text> : <Text style={styles.vagaEncerrada}>Vaga Encerrada</Text>\r\n                    }\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={styles.textos}>\r\n                <Text style={styles.descricao}>{descricao.length > 300 ? descricao.substring(0, 300) + \" [...]\" : descricao}</Text>\r\n            </View>\r\n\r\n            {/* {\r\n                    Botoes(vagaId)\r\n                } */}\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    botoes: {\r\n        display: 'flex',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between',\r\n        marginHorizontal: 3,\r\n        marginBottom: 2,\r\n    },\r\n\r\n    btnAzul: {\r\n        backgroundColor: '#ffffff',\r\n        color: '#016799',\r\n        borderColor: '#016799',\r\n    },\r\n\r\n    btnVermelho: {\r\n\r\n    },\r\n\r\n    textVermais: {\r\n\r\n    },\r\n\r\n    card: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n\r\n        margin: 10,\r\n\r\n        shadowOffset: { width: 2, height: 2, },\r\n        shadowColor: 'black',\r\n        shadowOpacity: 0.3,\r\n    },\r\n\r\n    titulo: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginHorizontal: 10,\r\n        marginTop: 10\r\n    },\r\n\r\n    nomeVaga: {\r\n        color: '#303030',\r\n        marginRight: 10,\r\n        fontFamily: 'sansation-regular',\r\n        fontSize: 22\r\n    },\r\n\r\n    sectionVaga: {\r\n\r\n    },\r\n\r\n    vagaAtiva: {\r\n        color: '#016799',\r\n        marginLeft: 0\r\n    },\r\n\r\n    vagaEncerrada: {\r\n        color: '#df0003',\r\n        marginLeft: 0\r\n    },\r\n\r\n    textos: {\r\n        marginVertical: 12,\r\n        marginHorizontal: 15,\r\n        color: '#606060',\r\n    },\r\n\r\n    descricao: {\r\n        fontSize: 13\r\n    }\r\n})\r\n\r\nexport default cardCandidatoHome;"]},"metadata":{},"sourceType":"module"}